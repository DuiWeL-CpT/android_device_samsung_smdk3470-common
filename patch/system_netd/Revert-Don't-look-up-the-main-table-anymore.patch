From e7781b75885b99cba8ca15bd8e7a2f99e7a2f83f Mon Sep 17 00:00:00 2001
From: Lukas0610 <mail@lukasberger.at>
Date: Sat, 01 Sep 2018 12:16:45 +0200
Subject: [PATCH] Revert "Don't look up the main table any more."

This rendered netd unable to add the default route for mobile data:

    Error adding route 0.0.0.0/0 -> xxx.xxx.xxx.xxx rmnet0 to table 1002: Network is unreachable

This reverts commit 92e8f96e43320efd5183d7452fb90883fd96415e.

Change-Id: I6a653d19c1c72c136e78d8d841e87d3c166698ea
---

diff --git a/server/RouteController.cpp b/server/RouteController.cpp
index c78854d..da4930f 100644
--- a/server/RouteController.cpp
+++ b/server/RouteController.cpp
@@ -67,6 +67,7 @@
 const uint32_t RULE_PRIORITY_BYPASSABLE_VPN      = 20000;
 const uint32_t RULE_PRIORITY_VPN_FALLTHROUGH     = 21000;
 const uint32_t RULE_PRIORITY_DEFAULT_NETWORK     = 22000;
+const uint32_t RULE_PRIORITY_DIRECTLY_CONNECTED  = 23000;
 const uint32_t RULE_PRIORITY_UNREACHABLE         = 32000;

 const uint32_t ROUTE_TABLE_LOCAL_NETWORK  = 97;
@@ -697,6 +698,22 @@
     return 0;
 }

+// Add a new rule to look up the 'main' table, with the same selectors as the "default network"
+// rule, but with a lower priority. We will never create routes in the main table; it should only be
+// used for directly-connected routes implicitly created by the kernel when adding IP addresses.
+// This is necessary, for example, when adding a route through a directly-connected gateway: in
+// order to add the route, there must already be a directly-connected route that covers the gateway.
+WARN_UNUSED_RESULT int addDirectlyConnectedRule() {
+    Fwmark fwmark;
+    Fwmark mask;
+
+    fwmark.netId = NETID_UNSET;
+    mask.netId = FWMARK_NET_ID_MASK;
+
+    return modifyIpRule(RTM_NEWRULE, RULE_PRIORITY_DIRECTLY_CONNECTED, RT_TABLE_MAIN,
+                        fwmark.intValue, mask.intValue, IIF_NONE, OIF_NONE, UID_ROOT, UID_ROOT);
+}
+
 // Add an explicit unreachable rule close to the end of the prioriy list to make it clear that
 // relying on the kernel-default "from all lookup main" rule at priority 32766 is not intended
 // behaviour. We do flush the kernel-default rules at startup, but having an explicit unreachable
@@ -850,7 +867,8 @@
                         inputInterface, OIF_NONE, INVALID_UID, INVALID_UID);
 }

-// Adds or removes an IPv4 or IPv6 route to the specified table.
+// Adds or removes an IPv4 or IPv6 route to the specified table and, if it's a directly-connected
+// route, to the main table as well.
 // Returns 0 on success or negative errno on failure.
 WARN_UNUSED_RESULT int RouteController::modifyRoute(uint16_t action, const char* interface,
                                                     const char* destination, const char* nexthop,
@@ -955,6 +973,9 @@
     if (int ret = addLocalNetworkRules(localNetId)) {
         return ret;
     }
+    if (int ret = addDirectlyConnectedRule()) {
+        return ret;
+    }
     if (int ret = addUnreachableRule()) {
         return ret;
     }
